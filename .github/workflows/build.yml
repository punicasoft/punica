name: Build and Publish

on:
  push:
    branches:
      - main
      - dev
      - release/*

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x' # replace with your project's target framework version
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Set version and configuration
        id: versioning
        run: |
          VERSION="1.0.0" # replace with your desired version
          BRANCH_NAME=${GITHUB_REF##*/}
          BUILD_NUMBER=$(echo $GITHUB_RUN_NUMBER)
          CONFIGURATION="Release"
          PUSH_SYMBOLS=false
          
          if [[ $BRANCH_NAME == "main" ]]; then
            echo "Using main branch settings."
          elif [[ $BRANCH_NAME == release/* ]]; then
            VERSION="${VERSION}-rc.${BUILD_NUMBER}"
          elif [[ $BRANCH_NAME == dev ]]; then
            VERSION="${VERSION}-beta.${BUILD_NUMBER}"
            CONFIGURATION="Debug"
          fi

          # case $BRANCH_NAME in
            # main)
              # ;;
            # release/*)
              # VERSION="${VERSION}-rc.${BUILD_NUMBER}"
              # ;;
            # dev)
              # VERSION="${VERSION}-beta.${BUILD_NUMBER}"
              # CONFIGURATION="Debug"
              # PUSH_SYMBOLS=true
              # ;;
          # esac
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "configuration=$CONFIGURATION"  >> $GITHUB_OUTPUT

      - name: Build
        run: dotnet build --configuration ${{ steps.versioning.outputs.configuration }} --no-restore /p:Version=${{ steps.versioning.outputs.version }}

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack --no-build --configuration ${{ steps.versioning.outputs.configuration }} --output out /p:Version=${{ steps.versioning.outputs.version }} /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg

      - name: Publish to NuGet
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/dev') || startsWith(github.ref, 'refs/heads/release/')
        run: dotnet nuget push ./out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --no-symbols
        
      - name: Publish Symbols to NuGet
        if: startsWith(github.ref, 'refs/heads/dev')
        run: dotnet nuget push ./out/*.snupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }}